"""
–ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–æ–º–±—É –Ω–∞ –≤—Ä–µ–º—è –∑–∞–¥–∞–Ω–Ω–æ–µ –≤ –∫–æ–Ω—Ñ–∏–≥–µ
"""
import json
import asyncio
from vkbottle.user import Blueprint, Message
from utils.edit_msg import edit_msg
from filters import ForEveryoneRule


bp = Blueprint("Bomb generator")


"""
> !–±–æ–º–±–∞ @vcirnik –ª–æ—Ö

> @vcirnik –ª–æ—Ö
> –î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∑–æ—Ä–≤–µ—Ç—Å—è —á–µ—Ä–µ–∑ 7 —Å–µ–∫—É–Ω–¥ üí£

(—Å–ø—É—Å—Ç—è 7 —Å–µ–∫—É–Ω–¥)

> –ë–£–ú! –í–∑—Ä—ã–≤–Ω–∞—è –±–µ—Å–µ–¥–∞!! üí•üí•
"""


@bp.on.message(ForEveryoneRule("bomb"), text="<prefix>–±–æ–º–±–∞ <text>")
async def bomb(message: Message, text):
    with open("config.json", "r", encoding="utf-8") as file:
        content = json.load(file)
        bomb_time = content["bomb_time"]
    if content["work_for_everyone"] is not True or message.from_id == int(
        content["user_id"]
    ):
        bomb_id = message.id
    else:
        bomb_id = await message.answer("–∞–±–æ–±–∞")

    for second in range(bomb_time, 0, -1):
        await edit_msg(
            bp.api,
            message,
            (
                f"{text}\n\n–î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∑–æ—Ä–≤–µ—Ç—Å—è —á–µ—Ä–µ–∑ {second} —Å–µ–∫—É–Ω–¥! "
                "&#128163;"
            ),
            m="bomb",
            bomb_id=bomb_id
        )
        await asyncio.sleep(1.0)
    await edit_msg(
        bp.api,
        message,
        "–ë–£–ú! –í–∑—Ä—ã–≤–Ω–∞—è –±–µ—Å–µ–¥–∞!! &#128165;&#128165;",
        bomb_id=bomb_id
    )
